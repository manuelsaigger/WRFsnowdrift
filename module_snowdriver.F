MODULE snowdriver

!----------------------------------------------------------------------------
! module: ~/phys/module_snowdriver.F
! The snowdrift driver calls the four snowdrift modules:
! Erosion: ~phys/module_snower.F (subroutine snowerosion)
! Particle: ~phys/module_snowvel.F (subroutine snow_vel)
! Sublimation: ~phys/module_snowsubl.F (subroutine snowsublimation)
! Deposition: ~phys/module_snowset.F (subroutine snowsettling)

! is called by ~/dyn_em/module_first_rk_step_part1.F
!----------------------------------------------------------------------------


CONTAINS
 SUBROUTINE snow_driver(dt, config_flags, g, dz8w, rho_phy, u, v, CDA,      &
            uth, ustar, ustarcor, phis, phis_end, phim, tracer, hsalt, rhodrift,      &
            snow, snowh, snoweracc, snoweracckg, fsalt, fero,               & ! snicexy, & 
            t_phy, p_phy, alt, snowsubl, tempch, moistch, zmid, zlow,       &
            tempchacc, moistchacc,                                          &
            moist, psis,  sigma, rhum, swdown, snowsublacc,                 &
            setvel, rmean,                                                  &
            fdep, snowdepacc, snowhdrift, snowload, snowdepacckg,           &
            ids,ide, jds,jde, kds,kde,                                      &
            ims,ime, jms,jme, kms,kme,                                      &
            i_start,i_end, j_start,j_end, kts,kte, num_tiles ) 
            
 USE snowero                                !snowerosion
 USE snowvel                                !snow_vel
 USE snowsub                               !snowsublimation
 USE snowset                                !snowsettling
 USE module_configure                 !frame/
 USE module_state_description     !frame/ --> generated by registry
 
 IMPLICIT NONE
 INTEGER,INTENT(IN) :: ids,ide, jds,jde, kds,kde,  &
                       ims,ime, jms,jme, kms,kme,  &
                       kts,kte, num_tiles
 INTEGER, DIMENSION(num_tiles), INTENT(IN) ::  i_start,i_end,j_start,j_end
 TYPE(grid_config_rec_type),  INTENT(IN   ) :: config_flags

 REAL,DIMENSION(ims:ime,kms:kme,jms:jme,num_tracer), INTENT(INOUT) :: tracer
! REAL,DIMENSION(ims:ime ,-2:0,jms:jme), INTENT(INOUT) :: snicexy  ! uncomment this line for real
 REAL,DIMENSION(ims:ime,kms:kme,jms:jme,num_moist), INTENT(INOUT) ::  moist
 REAL,DIMENSION(ims:ime,kms:kme,jms:jme), INTENT(INOUT) :: t_phy, snowsublacc
 REAL,DIMENSION(ims:ime,kms:kme,jms:jme), INTENT(OUT) :: tempch, moistch, snowsubl, tempchacc, moistchacc,  & 
						      psis, sigma, rhum, setvel, rmean
 REAL,DIMENSION(ims:ime,kms:kme,jms:jme), INTENT(IN) :: rho_phy, alt, p_phy, zmid, zlow, dz8w, u, v
 REAL,DIMENSION(ims:ime,jms:jme), INTENT(INOUT) :: snow, snowh,snoweracc, snowdepacc, phis, phis_end, phim,           &
                                                 snoweracckg, snowdepacckg
 REAL,DIMENSION(ims:ime,jms:jme), INTENT(OUT) :: snowload, snowhdrift, fsalt, fero, fdep,                   &
					       rhodrift, uth, ustarcor, hsalt
 REAL,DIMENSION(ims:ime,jms:jme), INTENT(IN) :: CDA, swdown, ustar
 REAL,INTENT(IN) :: dt, g
 INTEGER         :: ij, its,ite, jts,jte
 
!! ----------------------------------------------
! CALL THE MODULES
!! ----------------------------------------------

DO ij = 1 , num_tiles   !tile loop

    its = i_start(ij)
    ite = i_end(ij)
    jts = j_start(ij)
    jte = j_end(ij)
    
    ! --------------------
    ! EROSION
    ! --------------------
    IF (config_flags%er_opt==1) then  !if er_opt is turned on
     CALL wrf_debug(200, 'call snow_erosion')
     CALL snowerosion(dt, config_flags, g, dz8w, rho_phy, u, v, CDA,     &
            uth, ustar, ustarcor, phis, phis_end, phim, tracer, hsalt, rhodrift,   &
            snow, snowh, snoweracc, snoweracckg, fsalt, fero,            & ! snicexy, & 
            fdep, snowdepacc, snowdepacckg,                              &
            ids,ide, jds,jde, kds,kde,                                   &
            ims,ime, jms,jme, kms,kme,                                   &
            its,ite, jts,jte, kts,kte) 
    ENDIF
    
    ! --------------------
    ! SETTLING VELOCITY
    ! --------------------
    !only calls the particle module if subl_opt and dep_opt is not turned off
    IF (config_flags%subl_opt .ne. 0 .or. config_flags%dep_opt .ne. 0) then
     CALL wrf_debug(200, 'call snow_vel')
     CALL snow_vel(config_flags, dz8w, rho_phy, rmean, zmid, zlow, g, setvel, ustar, &
                    ids,ide, jds,jde, kds,kde,                                            &
                    ims,ime, jms,jme, kms,kme,                                            &
                    its,ite, jts,jte, kts,kte)
    ENDIF
    
    ! --------------------
    ! SUBLIMATION
    ! --------------------
    !if subl_opt is turned on (subl_opt=1: without feedback, subl_opt=2 with feedback)
    IF (config_flags%subl_opt==1 .or. config_flags%subl_opt==2) then
       CALL wrf_debug(200, 'call snow_sublimation')
       CALL snowsublimation(dt, config_flags, tracer, rho_phy,                            &
                             dz8w, t_phy, p_phy, rmean,                                   &
                             alt, snowsubl, tempch, moistch, tempchacc, moistchacc,       &
                             moist, swdown, psis,sigma, rhum,                             &
                             ustar, zmid, zlow, setvel, snowsublacc,                      &
                             ids,ide,jds,jde,kds,kde,                                     &
                             ims,ime,jms,jme,kms,kme,                                     &
                             its,ite,jts,jte,kts,kte)
    ENDIF  !subl_opt
    
    ! --------------------
    ! DEPOSITION
    ! --------------------
    IF (config_flags%dep_opt==1) then !if dep_opt is turned on
       CALL wrf_debug(200, 'call snow_deposition')
       CALL snowsettling(dt, tracer, dz8w, fdep,              &
           snoweracc, snowdepacc, snowhdrift, snowload,       &
           uth, ustar, snowh, snow, rhodrift,     &
           setvel, snowdepacckg,                              & ! snicexy, &
           ids, ide, jds, jde, kds, kde,                      &
           ims, ime, jms, jme, kms, kme,                      &
           its, ite, jts, jte, kts, kte)
    ENDIF !dep_opt

  ENDDO !end tile loop

 END SUBROUTINE snow_driver
END MODULE snowdriver
               
    
            
            
            
            
            
            
